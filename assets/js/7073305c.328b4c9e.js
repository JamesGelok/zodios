"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[644],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>c});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=l(t),c=a,k=u["".concat(s,".").concat(c)]||u[c]||m[c]||i;return t?r.createElement(k,o(o({ref:n},d),{},{components:t})):r.createElement(k,o({ref:n},d))}));function c(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=u;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var l=2;l<i;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},51:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var r=t(7462),a=(t(7294),t(3905));const i={sidebar_position:2},o="API definition helpers",p={unversionedId:"api/helpers",id:"api/helpers",title:"API definition helpers",description:"Usually, you'll want to define your API definition in a separate file and import it in your server and client code.",source:"@site/docs/api/helpers.md",sourceDirName:"api",slug:"/api/helpers",permalink:"/docs/api/helpers",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"API definition",permalink:"/docs/api/api-definition"},next:{title:"Examples",permalink:"/docs/api/examples"}},s={},l=[{value:"makeApi",id:"makeapi",level:2},{value:"makeEndpoint",id:"makeendpoint",level:2},{value:"makeParameters",id:"makeparameters",level:2},{value:"makeErrors",id:"makeerrors",level:2},{value:"apiBuilder",id:"apibuilder",level:2},{value:"ApiBuilder methods",id:"apibuilder-methods",level:3}],d={toc:l};function m(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"api-definition-helpers"},"API definition helpers"),(0,a.kt)("p",null,"Usually, you'll want to define your API definition in a separate file and import it in your server and client code.\nFor this use case, Zodios provides some helpers to make your life easier and still keep your API definition correctly inferred without needing to use Typescript ",(0,a.kt)("inlineCode",{parentName:"p"},"as const"),".  "),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"These helpers, are mandatory to be used when declaring your definitions outside of ",(0,a.kt)("inlineCode",{parentName:"p"},"Zodios")," constructor to allow your API definitions to be correctly inferred in both pure Javascript and Typescript.")),(0,a.kt)("h2",{id:"makeapi"},"makeApi"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"makeApi")," is a helper to narrow your api definitions and make some runtime checks."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"function makeApi(api: ZodiosEndpointDescriptions): ZodiosEndpointDescriptions;\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { makeApi } from "@zodios/core";\n\nconst api = makeApi([\n  {\n    method: "GET",\n    path: "/users/:id",\n    response: user,\n    alias: "getUser",\n    description: "Get user",\n  },\n  {\n    method: "GET",\n    path: "/users",\n    response: z.array(user),\n    alias: "getUsers",\n    description: "Get users",\n  },\n]);\n')),(0,a.kt)("h2",{id:"makeendpoint"},"makeEndpoint"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"makeEndpoint")," is a helper to narrow a signle endpoint definition and make some runtime checks."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"function makeEndpoint(endpoint: ZodiosEndpointDescription): ZodiosEndpointDescription;\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { makeEndpoint } from "@zodios/core";\n\nconst getUser = makeEndpoint({\n  method: "GET",\n  path: "/users/:id",\n  response: user,\n  alias: "getUser",\n  description: "Get user",\n});\n')),(0,a.kt)("p",null,"it can then be combined with ",(0,a.kt)("inlineCode",{parentName:"p"},"makeApi")," to compose a full api description."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { makeApi } from "@zodios/core";\nimport { getUser,getUsers } from "./endpoints";\n\nconst api = makeApi([getUser, getUsers]);\n')),(0,a.kt)("h2",{id:"makeparameters"},"makeParameters"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"makeParameters")," is a helper to narrow your parameter definitions."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"function makeParameters(params: ZodiosEndpointParameters): ZodiosEndpointParameters;\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { makeParameters } from "@zodios/core";\n\nconst params = makeParameters([\n  {\n    name: "limit",\n    description: "Limit",\n    schema: z.number().positive(),\n  },\n  {\n    name: "offset",\n    description: "Offset",\n    schema: z.number().positive(),\n  },\n]);\n')),(0,a.kt)("h2",{id:"makeerrors"},"makeErrors"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"makeErrors")," is a helper to narrow your error definitions."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"function makeErrors(errors: ZodiosEndpointErrors): ZodiosEndpointErrors;\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { makeErrors } from "@zodios/core";\n\nconst errors = makeErrors([\n  {\n    status: 404,\n    description: "User not found",\n    schema: z.object({\n      error: z.object({\n        userId: z.number(),\n        code: z.string(),\n        message: z.string(),\n      }),\n    }),\n  },\n  {\n    status: "default",\n    description: "Default error",\n    schema: z.object({\n      error: z.object({\n        code: z.string(),\n        message: z.string(),\n      }),\n    }),\n  },\n]);\n')),(0,a.kt)("h2",{id:"apibuilder"},"apiBuilder"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"apiBuilder")," is a helper to build API definitions with better type autocompletion."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"function apiBuilder(endpoint: ZodiosEndpointDescription): ApiBuilder;\n")),(0,a.kt)("h3",{id:"apibuilder-methods"},"ApiBuilder methods"),(0,a.kt)("p",null,"ApiBuilder is a helper to build API definitions with better type autocompletion."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"methods"),(0,a.kt)("th",{parentName:"tr",align:null},"parameters"),(0,a.kt)("th",{parentName:"tr",align:null},"return"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"addEndpoint"),(0,a.kt)("td",{parentName:"tr",align:null},"ZodiosEndpointDescription"),(0,a.kt)("td",{parentName:"tr",align:null},"ApiBuilder")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"build"),(0,a.kt)("td",{parentName:"tr",align:null},"none"),(0,a.kt)("td",{parentName:"tr",align:null},"ZodiosEndpointDescriptions")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { apiBuilder } from "@zodios/core";\n\nconst api = apiBuilder({\n  method: "GET",\n  path: "/users",\n  response: z.array(user),\n  alias: "getUsers",\n  description: "Get users",\n})\n  .addEndpoint({\n    method: "GET",\n    path: "/users/:id",\n    response: user,\n    alias: "getUser",\n    description: "Get user",\n  })\n  .build();\n')))}m.isMDXComponent=!0}}]);